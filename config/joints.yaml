swing/left/joint:
    joint_name: swing/left/joint

    hall_sensor:
        # spi parameters for hall sensor
        spi_cs_id: 1 # chip select address (over multiplexer)
        spi_device: /dev/spidev1.0
        spi_mode: 0x01 # SPI_CPHA
        spi_bits: 16 # 16 bits per word
        spi_speed: 500000 # 500kHz frequency
        spi_delay: 0 # usec, delay after last bit transfer, before device deselect
        zero_point: 0

    motor:
        can_name: can1
        can_id: 0xdf
        
    joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 10
           
    position_controller:
        type: effort_controllers/JointPositionController
        joint: swing/left/joint
        pid: {p: 2.0, i: 0.2, d: 0.0, i_clamp_min: -1.0, i_clamp_max: 1.0, antiwindup: true}

swing/right/joint:
    joint_name: swing/right/joint

    hall_sensor:
        # spi parameters for hall sensor
        spi_cs_id: 2 # chip select address (over multiplexer)
        spi_device: /dev/spidev1.0
        spi_mode: 0x01 # SPI_CPHA
        spi_bits: 16 # 16 bits per word
        spi_speed: 500000 # 500kHz frequency
        spi_delay: 0 # usec, delay after last bit transfer, before device deselect
        zero_point: 0

    motor:
        can_name: can1
        can_id: 0x1
        
    joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 10
           
    position_controller:
        type: effort_controllers/JointPositionController
        joint: swing/right/joint
        pid: {p: 3.0, i: 2.5, d: 0.6, i_clamp_min: -10.0, i_clamp_max: 10.0, antiwindup: true}
        
extend/joint:
    joint_name: extend/joint

    rotary_encoder:
        #spi parameters for the arduino rotary encoder
        spi_cs_id: 3 # chip select address (over multiplexer)
        spi_device: /dev/spidev1.0
        spi_mode: 0 # standard spi mode
        spi_bits: 8 # 8 bits per word
        spi_speed: 200000 # 200kHz frequency
        spi_delay: 0 # usec, delay after last bit transfer, before device deselect

    motor:
        can_name: can1
        can_id: 0x3
        
    joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 10
           
    position_controller:
        type: effort_controllers/JointPositionController
        joint: extend/joint
        pid: {p: 3.0, i: 2.5, d: 0.6, i_clamp_min: -10.0, i_clamp_max: 10.0, antiwindup: true}

